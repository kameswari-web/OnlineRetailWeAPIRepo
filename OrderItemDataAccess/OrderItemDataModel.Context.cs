//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OrderItemDataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Online_Products_PurchaseEntitiesDB : DbContext
    {
        public Online_Products_PurchaseEntitiesDB()
            : base("name=Online_Products_PurchaseEntitiesDB")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<OrderItems> OrderItems { get; set; }
    
        public virtual int sp_Add_OrderItemDetails(string custName, string emailId, string address, string phoneNo, string orderStatus, string productName, Nullable<int> quantity)
        {
            var custNameParameter = custName != null ?
                new ObjectParameter("CustName", custName) :
                new ObjectParameter("CustName", typeof(string));
    
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneNoParameter = phoneNo != null ?
                new ObjectParameter("PhoneNo", phoneNo) :
                new ObjectParameter("PhoneNo", typeof(string));
    
            var orderStatusParameter = orderStatus != null ?
                new ObjectParameter("OrderStatus", orderStatus) :
                new ObjectParameter("OrderStatus", typeof(string));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Add_OrderItemDetails", custNameParameter, emailIdParameter, addressParameter, phoneNoParameter, orderStatusParameter, productNameParameter, quantityParameter);
        }
    
        public virtual int sp_Cancel_OrderItems(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Cancel_OrderItems", orderIdParameter);
        }
    
        public virtual int sp_Update_OrderItemsQuantity(Nullable<int> orderId, Nullable<int> prodId, Nullable<int> itemQuantity)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var prodIdParameter = prodId.HasValue ?
                new ObjectParameter("ProdId", prodId) :
                new ObjectParameter("ProdId", typeof(int));
    
            var itemQuantityParameter = itemQuantity.HasValue ?
                new ObjectParameter("ItemQuantity", itemQuantity) :
                new ObjectParameter("ItemQuantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Update_OrderItemsQuantity", orderIdParameter, prodIdParameter, itemQuantityParameter);
        }
    }
}
